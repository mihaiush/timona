on: [push]

env:
  PYTHON_VERSION: '3.12'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-bugbear flake8_simplify
        pip install pytest pyyaml requests jinja2 deepmerge
        wget -O - https://raw.githubusercontent.com/jirutka/esh/master/esh >/usr/local/bin/esh
        chmod +x /usr/local/bin/esh
    - name: Flake8
      run: |
        flake8 -v
    - name: Pytest
      run: |
        python -m pytest -v

  build:
    needs: [lint]
    if: needs.lint.result == 'success' && contains(github.ref, '/tags/') && startsWith(github.ref_name, 'v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry 
        poetry install
    - name: Build
      run: |
        poetry build
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #GITHUB_URL: ${{ github.server_url	}}
        #GITHUB_REPO: ${{ github.repository }}
        GITHUB_TAG: ${{ github.ref_name }}      
      run: |
        gh release create $GITHUB_TAG $(find dist -name '*.tar.gz') $(find dist -name '*.whl') --generate-notes --latest --verify-tag
    - name: Publish
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry publish -u "__token__" -p "${PYPI_TOKEN}"
        
        

